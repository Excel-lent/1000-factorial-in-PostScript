%!PS-Adobe-2.0
%%Title: N-factorial
%%Date: Sun Apr 21 20:30:19 CEST 2002
%%BoundingBox: 0 0 592 792
%%EndComments

% -------------- Variables --------------- 
/LM 72 def %right margin 
/RM 216 def %left margin 
/ypos 720 def %current y-position 
/lineheight 14 def %distance between lines
/Tempstr 4 string def
/MAXARRAY 3000 def
/numbers MAXARRAY array def
/N 1000 def

% ------------- Procedures --------------- 
/crlf                 %move to next line 
{ ypos lineheight sub %decrease ypos 
 /ypos exch def       % ...& save new value
 LM ypos moveto } def %move to next line 

/counter 0 def% the number of current factorial because we are calculating 
              % it step-by-step in the loop
/c2 0 def     % pointer of 'number' in array 'numbers'; 
              % needed for adding of 'overflow' to the next cell of array
/number 0 def % current number from array 'numbers'
/cprint 0 def % necessary for printing: to not print some 'zeroes' before 
              % factorial

%/mult - multiplication of array 'numbers' by 'counter'
/mult 
{ 0 1 MAXARRAY -1 add
   {dup numbers exch get counter mul numbers 3 1 roll put
   } for  
} def

%/check10 - checking for 'overflow', when the number in 'numbers' is greater 
% then 9, then one should add an 'overflow' to the next cell
% We are doing this after multiplication of each cells of 'numbers' by 
% 'counter'. 
/check10 {
   0 1 MAXARRAY -2 add {/c2 exch def numbers c2 get /number exch def
          numbers c2 number 10 mod put
          numbers c2 1 add numbers c2 1 add get number 10 idiv add put
         } for
} def

% /showar - showing an array 'numbers' in a good format
/showar 
{MAXARRAY -1 add -1 0 
        {currentpoint pop 500 gt {crlf} if numbers exch get dup 0 ne 
              {/cprint 1 def Tempstr cvs show}
              {cprint 0 ne {Tempstr cvs show} {pop} ifelse} 
 ifelse }
 for} def

%------------- Main Program -------------- 
 LM ypos moveto 

/Times-Bold findfont 14 scalefont setfont
N Tempstr cvs show (!=) show
/LM 106 def 
/Times-Italic findfont 14 scalefont setfont
0 1 MAXARRAY -1 add {numbers exch 0 put } for
numbers 0 1 put
1 1 N {/counter exch def mult check10 /cprint 0 def } for
showar

showpage

%%EOF
